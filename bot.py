import os
import datetime
import logging
from dotenv import load_dotenv
from telegram import Update, Bot
from telegram.ext import (
    Application, MessageHandler, filters, CommandHandler, CallbackContext, ConversationHandler
)
from yadisk import YaDisk

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")
YANDEX_DISK_TOKEN = os.getenv("YANDEX_DISK_TOKEN")

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–∞
bot = Bot(token=TELEGRAM_TOKEN)
y = YaDisk(token=YANDEX_DISK_TOKEN)

# –°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ ConversationHandler
WAITING_FOR_FILENAME = 1
user_files = {}  # –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ, –æ–∂–∏–¥–∞—é—â–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏—è


async def handle_image(update: Update, context: CallbackContext):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–º—è —Ñ–∞–π–ª–∞"""
    file = await context.bot.get_file(update.message.photo[-1].file_id)
    user_files[update.message.chat_id] = file
    await update.message.reply_text("üìÇ –í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:")
    return WAITING_FOR_FILENAME


async def save_image(update: Update, context: CallbackContext):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º"""
    chat_id = update.message.chat_id
    if chat_id not in user_files:
        await update.message.reply_text("‚ö† –û—à–∏–±–∫–∞: –Ω–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return ConversationHandler.END

    file = user_files.pop(chat_id)
    filename = update.message.text.strip() + ".jpg"

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ —Å –¥–∞—Ç–æ–π
    date_folder = datetime.datetime.now().strftime("%Y-%m-%d")
    yandex_folder = f"disk:/–Ω–∞–π–¥–µ–Ω–æ –Ω–∞ –º—Ö/{date_folder}"
    local_folder = f"images/{date_folder}"
    os.makedirs(local_folder, exist_ok=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞ –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫–µ
    if not y.is_dir(yandex_folder):
        y.mkdir(yandex_folder)

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å
    file_path = f"{local_folder}/{filename}"

    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
    await file.download_to_drive(file_path)

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞ –Ø–Ω–¥–µ–∫—Å.–î–∏—Å–∫
    y.upload(file_path, f"{yandex_folder}/{filename}")

    await update.message.reply_text(f"‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –∫–∞–∫ **{filename}** –≤ –ø–∞–ø–∫—É `{date_folder}`.")

    # –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª
    os.remove(file_path)
    return ConversationHandler.END


async def cancel(update: Update, context: CallbackContext):
    """–û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏"""
    await update.message.reply_text("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.")
    return ConversationHandler.END


def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ —Å –≤–≤–æ–¥–æ–º –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    conv_handler = ConversationHandler(
        entry_points=[MessageHandler(filters.PHOTO, handle_image)],
        states={WAITING_FOR_FILENAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, save_image)]},
        fallbacks=[CommandHandler("cancel", cancel)],
    )

    app.add_handler(conv_handler)
    app.add_handler(CommandHandler("clear", cancel))

    logger.info("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    app.run_polling()


if __name__ == "__main__":
    main()
